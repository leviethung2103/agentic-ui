name: Deploy to VPS

on:
  push:
    branches: [main]
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Navigate to deploy directory
            cd ${{ secrets.VPS_PATH || '~' }}

            # Clone or update the repository
            if [ -d "agent-ui" ]; then
              echo "Updating existing repository..."
              cd agent-ui
              git fetch origin
              git reset --hard origin/main
            else
              echo "Cloning repository..."
              git clone ${{ secrets.REPO_URL }} agent-ui
              cd agent-ui
            fi

            # Install pnpm if not exists
            if ! command -v pnpm &> /dev/null; then
              echo "Installing pnpm..."
              curl -fsSL https://get.pnpm.io/install.sh | sh -
              source ~/.bashrc
            fi

            # Install dependencies
            echo "Installing dependencies..."
            pnpm install

            # Build the application
            echo "Building application..."
            pnpm build

            # Stop existing PM2 process if running
            if pm2 describe agent-ui &> /dev/null; then
              echo "Stopping existing PM2 process..."
              pm2 delete agent-ui
            fi

            # Start the application with PM2
            echo "Starting application..."
            pm2 start pnpm --name "agent-ui" -- start -H 0.0.0.0

            # Save PM2 process list and set up startup
            echo "Setting up PM2 startup..."
            pm2 save
            pm2 startup | tail -n 1 | bash

            # Verify the service is running
            echo "Deployment completed. Current PM2 processes:"
            pm2 list

            # Set up and start the backend
            cd backend
            BACKEND_DIR=$(pwd)
            uv venv .venv
            source .venv/bin/activate
            uv pip install -r requirements.txt

            # Create logs directory if it doesn't exist
            mkdir -p logs

            # Stop any existing process using the same port if needed
            lsof -ti:7777 | xargs kill -9 2>/dev/null || true

            # Start the backend with nohup
            echo "Starting backend with nohup..."
            nohup bash -c "source .venv/bin/activate && python playground.py" > logs/backend.log 2>&1 &
            echo $! > backend.pid
            echo "Backend started with PID $(cat backend.pid)"


            # Verify the service is running
            sleep 2
            if ps -p $(cat backend.pid) > /dev/null; then
                echo "Backend is running with PID $(cat backend.pid)"
            else
                echo "Failed to start backend. Check logs/backend.log for details."
                tail -n 20 logs/backend.log
                exit 1
            fi