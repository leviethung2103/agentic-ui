name: Deploy to VPS

on:
  push:
    branches: [main]
    paths:
      - '**'
      - '!.github/**'
      - '!backend/**' # Exclude backend directory from triggering this workflow
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Navigate to deploy directory
            cd ${{ secrets.VPS_PATH || '~' }}

            # Clone or update the repository
            if [ -d "agent-ui" ]; then
              echo "Updating existing repository..."
              cd agent-ui
              git fetch origin
              git reset --hard origin/main
            else
              echo "Cloning repository..."
              git clone ${{ secrets.REPO_URL }} agent-ui
              cd agent-ui
            fi

            # Install pnpm if not exists
            if ! command -v pnpm &> /dev/null; then
              echo "Installing pnpm..."
              curl -fsSL https://get.pnpm.io/install.sh | sh -
              source ~/.bashrc
            fi

            # Install dependencies
            echo "Installing dependencies..."
            pnpm install

            # Build the application
            echo "Building application..."
            pnpm build

            # Stop existing PM2 process if running
            if pm2 describe ${{ secrets.PM2_APP_NAME || 'agent-ui' }} &> /dev/null; then
              echo "Stopping existing PM2 process..."
              pm2 delete ${{ secrets.PM2_APP_NAME || 'agent-ui' }}
            fi

            # Start the application with PM2
            echo "Starting application..."
            pm2 start pnpm --name "${{ secrets.PM2_APP_NAME || 'agent-ui' }}" -- start

            # Save PM2 process list and set up startup
            echo "Setting up PM2 startup..."
            pm2 save
            pm2 startup | tail -n 1 | bash

            # Verify the service is running
            echo "Deployment completed. Current PM2 processes:"
            pm2 list
