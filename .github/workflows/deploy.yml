name: Deploy Next.js App to VPS

on:
  push:
    branches: [main]  # Or your main branch name
    paths:
      - '**'
      - '!.github/**'
      - '!backend/**'  # Exclude backend directory from triggering this workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build App
        run: npm run build

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r .next public package*.json next.config.js next-env.d.ts tsconfig.json ./
          tar -czf deployment/deploy.tar.gz .next public package*.json next.config.js next-env.d.ts tsconfig.json

      - name: Copy Files to VPS
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "deployment/deploy.tar.gz"
          target: ${{ secrets.VPS_PATH }}
          strip_components: 1

      - name: Extract and Deploy on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ${{ secrets.VPS_PATH }}
            
            # Stop the current PM2 process if running
            pm2 delete ${{ secrets.PM2_APP_NAME }} || true
            
            # Extract the deployment package
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            
            # Install production dependencies
            npm ci --only=production
            
            # Start the application with PM2
            pm2 start npm --name "${{ secrets.PM2_APP_NAME || 'next-app' }}" -- start
            
            # Save PM2 process list for persistence
            pm2 save
            
            # Configure PM2 to start on system boot
            pm2 startup | tail -n 1 | bash
            
            # Verify the service is running
            pm2 list
