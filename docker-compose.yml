services:
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: nextjs-app
  #   restart: unless-stopped
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     - NODE_ENV=production
  #     # Add other environment variables here
  #     # - DATABASE_URL=your_database_url
  #   volumes:
  #     # For development, you might want to add:
  #     # - .:/app
  #     # - /app/node_modules
  #     # - /app/.next
  #   healthcheck:
  #     test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 5s

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Phoenix
  phoenix:
    image: arizephoenix/phoenix:latest
    ports:
      - "6006:6006"  # UI and OTLP HTTP collector
      - "4317:4317"  # OTLP gRPC collector
    environment:
      - PHOENIX_SQL_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PHOENIX_ENABLE_AUTH=True
      - PHOENIX_SECRET=3413f9a7735bb780c6b8e4db7d946a492b64d26112a955cdea6a797f4c833593
      - PHOENIX_USE_SECURE_COOKIES=True
    restart: unless-stopped
    depends_on:
      - postgres

volumes:
  postgres_data:  
